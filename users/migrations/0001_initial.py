# Generated by Django 5.0.2 on 2024-03-21 21:36

from django.db import migrations, models

import users.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("web", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                ("yandex_id", models.IntegerField(unique=True, verbose_name="ID в Yandex")),
                (
                    "username",
                    models.CharField(max_length=150, unique=True, verbose_name="Имя пользователя"),
                ),
                ("first_name", models.CharField(max_length=150, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=150, verbose_name="Фамилия")),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="E-mail")),
                (
                    "birthday",
                    models.DateTimeField(blank=True, null=True, verbose_name="Дата рождения"),
                ),
                ("sex", models.CharField(max_length=1, verbose_name="Пол")),
                (
                    "profile_picture",
                    models.URLField(max_length=511, verbose_name="URL фотографии пользователя"),
                ),
                (
                    "user_role",
                    models.CharField(
                        choices=[("superuser", "Суперпользователь"), ("user", "Пользователь")],
                        default="user",
                        max_length=20,
                        verbose_name="Роль",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                ("track", models.ManyToManyField(to="web.track", verbose_name="Песня")),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", users.models.UserManager()),
            ],
        ),
    ]
